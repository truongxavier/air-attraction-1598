function unimplemented(e){throw new Error("Node.js process "+e+" is not supported by JSPM core outside of Node.js")}var e=[];var n=false;var r;var t=-1;function cleanUpNextTick(){if(n&&r){n=false;r.length?e=r.concat(e):t=-1;e.length&&drainQueue()}}function drainQueue(){if(!n){var a=setTimeout(cleanUpNextTick,0);n=true;var o=e.length;while(o){r=e;e=[];while(++t<o)r&&r[t].run();t=-1;o=e.length}r=null;n=false;clearTimeout(a)}}function nextTick(r){var t=new Array(arguments.length-1);if(arguments.length>1)for(var a=1;a<arguments.length;a++)t[a-1]=arguments[a];e.push(new Item(r,t));1!==e.length||n||setTimeout(drainQueue,0)}function Item(e,n){this.fun=e;this.array=n}Item.prototype.run=function(){this.fun.apply(null,this.array)};var a="browser";var o="x64";var i="browser";var s={PATH:"/usr/bin",LANG:navigator.language+".UTF-8",PWD:"/",HOME:"/home",TMP:"/tmp"};var v=["/usr/bin/node"];var l=[];var u="v16.8.0";var c={};var emitWarning=function(e,n){console.warn((n?n+": ":"")+e)};var binding=function(e){unimplemented("binding")};var umask=function(e){return 0};var cwd=function(){return"/"};var chdir=function(e){};var d={name:"node",sourceUrl:"",headersUrl:"",libUrl:""};function noop(){}var p=noop;var f=[];function _linkedBinding(e){unimplemented("_linkedBinding")}var g={};var m=false;var h={};function dlopen(e){unimplemented("dlopen")}function _getActiveRequests(){return[]}function _getActiveHandles(){return[]}var _=noop;var b=noop;var cpuUsage=function(){return{}};var w=cpuUsage;var k=cpuUsage;var x=noop;var U=noop;var A=noop;var E={};function assert(e,n){if(!e)throw new Error(n||"assertion error")}var C={inspector:false,debug:false,uv:false,ipv6:false,tls_alpn:false,tls_sni:false,tls_ocsp:false,tls:false,cached_builtins:true};var T=noop;var y=noop;function hasUncaughtExceptionCaptureCallback(){return false}var L=noop;var P=noop;var B=noop;var I=noop;var N=noop;var M=void 0;var H=void 0;var D=void 0;var S=noop;var q=2;var R=1;var Q="/bin/usr/node";var j=9229;var F="node";var O=[];var W=noop;var G={now:"undefined"!==typeof performance?performance.now.bind(performance):void 0,timing:"undefined"!==typeof performance?performance.timing:void 0};if(void 0===G.now){var J=Date.now();G.timing&&G.timing.navigationStart&&(J=G.timing.navigationStart);G.now=()=>Date.now()-J}function uptime(){return G.now()/1e3}var z=1e9;function hrtime(e){var n=Math.floor(.001*(Date.now()-G.now()));var r=.001*G.now();var t=Math.floor(r)+n;var a=Math.floor(r%1*1e9);if(e){t-=e[0];a-=e[1];if(a<0){t--;a+=z}}return[t,a]}hrtime.bigint=function(e){var n=hrtime(e);return"undefined"===typeof BigInt?n[0]*z+n[1]:BigInt(n[0]*z)+BigInt(n[1])};var K=10;var V={};var X=0;function on(){return oe}var Y=on;var Z=on;var $=on;var ee=on;var ne=on;var re=noop;var te=on;var ae=on;function listeners(e){return[]}var oe={version:u,versions:c,arch:o,platform:i,release:d,_rawDebug:p,moduleLoadList:f,binding:binding,_linkedBinding:_linkedBinding,_events:V,_eventsCount:X,_maxListeners:K,on:on,addListener:Y,once:Z,off:$,removeListener:ee,removeAllListeners:ne,emit:re,prependListener:te,prependOnceListener:ae,listeners:listeners,domain:g,_exiting:m,config:h,dlopen:dlopen,uptime:uptime,_getActiveRequests:_getActiveRequests,_getActiveHandles:_getActiveHandles,reallyExit:_,_kill:b,cpuUsage:cpuUsage,resourceUsage:w,memoryUsage:k,kill:x,exit:U,openStdin:A,allowedNodeEnvironmentFlags:E,assert:assert,features:C,_fatalExceptions:T,setUncaughtExceptionCaptureCallback:y,hasUncaughtExceptionCaptureCallback:hasUncaughtExceptionCaptureCallback,emitWarning:emitWarning,nextTick:nextTick,_tickCallback:L,_debugProcess:P,_debugEnd:B,_startProfilerIdleNotifier:I,_stopProfilerIdleNotifier:N,stdout:M,stdin:D,stderr:H,abort:S,umask:umask,chdir:chdir,cwd:cwd,env:s,title:a,argv:v,execArgv:l,pid:q,ppid:R,execPath:Q,debugPort:j,hrtime:hrtime,argv0:F,_preload_modules:O,setSourceMapsEnabled:W};export{B as _debugEnd,P as _debugProcess,V as _events,X as _eventsCount,m as _exiting,T as _fatalExceptions,_getActiveHandles,_getActiveRequests,b as _kill,_linkedBinding,K as _maxListeners,O as _preload_modules,p as _rawDebug,I as _startProfilerIdleNotifier,N as _stopProfilerIdleNotifier,L as _tickCallback,S as abort,Y as addListener,E as allowedNodeEnvironmentFlags,o as arch,v as argv,F as argv0,assert,binding,chdir,h as config,cpuUsage,cwd,j as debugPort,oe as default,dlopen,g as domain,re as emit,emitWarning,s as env,l as execArgv,Q as execPath,U as exit,C as features,hasUncaughtExceptionCaptureCallback,hrtime,x as kill,listeners,k as memoryUsage,f as moduleLoadList,nextTick,$ as off,on,Z as once,A as openStdin,q as pid,i as platform,R as ppid,te as prependListener,ae as prependOnceListener,_ as reallyExit,d as release,ne as removeAllListeners,ee as removeListener,w as resourceUsage,W as setSourceMapsEnabled,y as setUncaughtExceptionCaptureCallback,H as stderr,D as stdin,M as stdout,a as title,umask,uptime,u as version,c as versions};

